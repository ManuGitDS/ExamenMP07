<?php

class clsCart
{
    private int $total;
    private int $num_items;
    private $xml;
    private $xmlfile = 'xmldb/cart.xml';
    private $catalog;


//////////////////////////////////////////////////////////////////////////////////
    public function __construct()
    {
        //echo "__constructor";
        $this->Load();
        $this->Analyse();
        $this->catalog = new clsCatalog();
        
    }
//////////////////////////////////////////////////////////////////////////////////

   
//////////////////////////////////////////////////////////////////////////////////
     function Analyse(){
        $xml=$this->xml;
        $totalItems = 0;
        foreach($xml->children() as $child){
            $items = $child->quantity;
            $totalItems += $items;
            //echo var_dump($child);
        }
        echo "<br> TOTAL DE ITEMS EN EL CARRITO: ".$totalItems ."<br>";
    }
//////////////////////////////////////////////////////////////////////////////////
    function Load()
    {
        if (file_exists($this->xmlfile)) {
            $this->xml = simplexml_load_file($this->xmlfile);
        } else {

            $this->xml = new SimpleXMLElement($this->xmlfile);
        }
    }
//////////////////////////////////////////////////////////////////////////////////
    function show() {
       //header('Content-Type: application/xml; charset=utf-8');
        echo $this->xml->asXML();
    }
//////////////////////////////////////////////////////////////////////////////////
    function add($id_product, $quantity) {
        if ($this->catalog->itemExist($id_product)){
            echo "existe";
            
        $item = $this->xml->addChild('product_items');
        $item->addChild('id_product', $id_product);
        $item->addChild('quantity',$quantity);
        $this->xml->asXML($this->xmlfile);
            
        }
        else{
            echo "no existe";
        }


     }
//////////////////////////////////////////////////////////////////////////////////

function getTotal(){
    return $this->total;
}
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
}
